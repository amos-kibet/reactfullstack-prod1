{"version":3,"sources":["store/actions/action_types.js","store/actions/actions.js","containers/container1.js","containers/header.js","utils/history.js","containers/profile.js","containers/form1.js","containers/renderlist.js","functional/component1.js","functional/callback.js","functional/privatecomponent.js","functional/unauthredirect.js","functional/home.js","functional/renderlistitem.js","functional/signup.js","blog/posts.js","blog/addpost.js","blog/showpost.js","blog/editpost.js","profile/showuser.js","utils/authCheck.js","routes.js","utils/auth.js","App.js","store/reducers/reducer1.js","store/reducers/auth_reducer.js","store/reducers/posts_reducer.js","store/reducers/user_reducer.js","store/reducers/index.js","index.js"],"names":["SUCCESS","FAILURE","USER_INPUT","LOGIN_SUCCESS","LOGIN_FAILURE","ADD_PROFILE","REMOVE_PROFILE","SET_DB_PROFILE","REMOVE_DB_PROFILE","FETCH_DB_POSTS","REMOVE_DB_POSTS","FETCH_POST_COMMENTS","REMOVE_POST_COMMENTS","FETCH_USER_POSTS","REMOVE_USER_POSTS","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","SET_OTHER_USER_DB_PROFILE","REMOVE_OTHER_USER_DB_PROFILE","SET_OTHER_USER_DB_POSTS","REMOVE_OTHER_USER_DB_POSTS","success","type","ACTION_TYPES","failure","login_success","login_failure","add_profile","profile","payload","remove_profile","Container1","onClick","console","log","props","stateprop1","action1","action2","action_creator1","action_creator2","this","user_text","Component","connect","state","reducer1","user_reducer","dispatch","ACTIONS","Header","to","style","padding","is_authenticated","auth","logout","login","auth_reducer","createBrowserHistory","Profile","handleClickOpen","pid","setState","open","post_id","handleClickClose","RenderProfile","nickname","src","picture","alt","email","name","email_verified","RenderPost","post","Card","width","height","marginBottom","paddingBottom","CardHeader","pathname","title","className","date_created","CardContent","overflow","body","DeletePost","axios","delete","data","then","res","catch","err","setTimeout","history","replace","user_id","db_profile","uid","get","params","set_posts","user_posts","map","RenderPosts","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","posts_reducer","set_user_posts","posts","Form1","value","handleChange","event","target","handleSubmit","preventDefault","input_action_creator","onSubmit","onChange","text","RenderList","items","num","bool","list_item","marginTop","Component1","Callback","PrivateComponent","UnauthRedirect","Home","RenderListItem","location","SignUp","color","size","variant","Posts","handleTransition","opacity","add_search_posts_to_state","posts_search","animate_search_posts","posts_search_motion","i","add_posts_to_state","num_posts","length","page_range","slice_posts","animate_posts","indexOfLastPost","activePage","posts_per_page","indexOfFirstPost","posts_slice","slice","posts_motion","handlePageChange","pageNumber","handleSearch","search_query","posts_success","search_posts","moment","format","paddingLeft","textDecoration","author","likes","transition","TextField","label","margin","RendePosts","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","AddPost","username","response","multiline","rows","ShowPost","add_comments_to_state","comments","comments_arr","animate_comments","mao","comment","comments_motion","handleCommentSubmit","submitted_comment","handleCommentUpdate","commentIndex","findIndex","com","cid","newArr","handleCommentDelete","delete_comment_id","filter","RenderComments","isEdited","cur_user_id","handleCommentChange","window","scroll","top","left","behavior","handleUpdate","editted_comment","commment","put","handleDelete","handleLikes","like_user_id","includes","like_post","like_user_ids","set_comments","cursor","isAuthenticated","EditPost","handleTitleChange","handleBodyChange","goBack","ShowUser","set_profile","set_db_posts","scrollTo","user_profile","OtherUserDBProfile","db_other_user_posts","AuthCheck","send_profile_to_db","set_db_profile","userProfile","remove_db_profile","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","authorize","handleAuth","parseHash","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","getAccessToken","getItem","client","userInfo","removeItem","parse","PrivateRoute","component","render","Routes","exact","path","hash","handleAuthentication","App","initialState","Reducer1","action","AuthReducer","PostsReducer","UserReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5860cc81.chunk.js","sourcesContent":["export const SUCCESS = \"SUCCESS\";\r\nexport const FAILURE = \"FAILURE\";\r\nexport const USER_INPUT = \"USER_INPUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const ADD_PROFILE = \"ADD_PROFILE\";\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\";\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\";\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\";\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\";\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\";\r\nexport const FETCH_POST_COMMENTS = \"FETCH_POST_COMMENTS\";\r\nexport const REMOVE_POST_COMMENTS = \"REMOVE_POST_COMMENTS\";\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\";\r\nexport const REMOVE_USER_POSTS = \"REMOVE_USER_POSTS\";\r\nexport const SEARCH_POSTS_SUCCESS = \"SEARCH_POSTS_SUCCESS\";\r\nexport const SEARCH_POSTS_FAILURE = \"SEARCH_POSTS_FAILURE\";\r\nexport const SET_OTHER_USER_DB_PROFILE = \"SET_OTHER_USER_DB_PROFILE\";\r\nexport const REMOVE_OTHER_USER_DB_PROFILE = \"REMOVE_OTHER_USER_DB_PROFILE\";\r\nexport const SET_OTHER_USER_DB_POSTS = \"SET_OTHER_USER_DB_POSTS\";\r\nexport const REMOVE_OTHER_USER_DB_POSTS = \"REMOVE_OTHER_USER_DB_POSTS\";","import * as ACTION_TYPES from './action_types'\r\n\r\nexport const success = () => {\r\n    return {\r\n        type: ACTION_TYPES.SUCCESS\r\n    }\r\n};\r\n\r\nexport const failure = () => {\r\n    return {\r\n        type: ACTION_TYPES.FAILURE\r\n    }\r\n};\r\n\r\nexport const user_input = (text) => {\r\n    return {\r\n        type: ACTION_TYPES.USER_INPUT,\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const login_success = () => {\r\n    return {\r\n        type: ACTION_TYPES.LOGIN_SUCCESS\r\n    }\r\n};\r\n\r\nexport const login_failure = () => {\r\n    return {\r\n        type: ACTION_TYPES.LOGIN_FAILURE\r\n    }\r\n};\r\n\r\nexport const add_profile = (profile) => {\r\n    return {\r\n        type: ACTION_TYPES.ADD_PROFILE,\r\n        payload: profile\r\n    }\r\n};\r\n\r\nexport const remove_profile = () => {\r\n    return {\r\n        type: ACTION_TYPES.REMOVE_PROFILE\r\n    }\r\n};\r\n\r\nexport const set_db_profile = (profile) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_DB_PROFILE,\r\n        payload: profile\r\n    }\r\n};\r\n\r\nexport const remove_db_profile = () => {\r\n    return {\r\n        type: ACTION_TYPES.REMOVE_DB_PROFILE\r\n    }\r\n};\r\n\r\nexport const fetch_db_posts = (posts) => {\r\n    return {\r\n        type: ACTION_TYPES.FETCH_DB_POSTS,\r\n        payload: posts\r\n    }\r\n};\r\n\r\nexport const remove_db_posts = () => {\r\n    return {\r\n        type: ACTION_TYPES.REMOVE_DB_POSTS\r\n    }\r\n};\r\n\r\nexport const fetch_post_comments = (comments) => {\r\n    return {\r\n        type: ACTION_TYPES.FETCH_POST_COMMENTS,\r\n        payload: comments\r\n    }\r\n};\r\n\r\nexport const remove_post_comments = () => {\r\n    return {\r\n        type: ACTION_TYPES.REMOVE_POST_COMMENTS\r\n    }\r\n};\r\n\r\nexport const fetch_user_posts = (posts) => {\r\n    return {\r\n        type: ACTION_TYPES.FETCH_USER_POSTS,\r\n        payload: posts\r\n    }\r\n};\r\n\r\nexport const fetch_search_posts = (posts) => {\r\n    return {\r\n        type: ACTION_TYPES.SEARCH_POSTS_SUCCESS,\r\n        payload: posts\r\n    }\r\n};\r\n\r\nexport const remove_search_posts = () => {\r\n    return {\r\n        type: ACTION_TYPES.SEARCH_POSTS_FAILURE\r\n    }\r\n};\r\n\r\nexport const set_other_user_db_profile = (profile) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_OTHER_USER_DB_PROFILE,\r\n        payload: profile\r\n    }\r\n};\r\n\r\nexport const remove_other_user_db_profile = () => {\r\n    return {\r\n        type: ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE\r\n    }\r\n};\r\n\r\nexport const get_other_user_db_posts = (posts) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_OTHER_USER_DB_POSTS,\r\n        payload: posts\r\n    }\r\n};\r\n\r\nexport const remove_other_user_db_posts = () => {\r\n    return {\r\n        type: ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Container1 extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={() => console.log(this.props.stateprop1)}> Get State</button>\r\n                <button onClick={() => this.props.action1()}> Dispatch Action 1</button>\r\n                <button onClick={() => this.props.action2()}>Dispatch Action 2</button>\r\n                <button onClick={() => this.props.action_creator1()}>Dispatch Action Creator 1</button>\r\n                <button onClick={() => this.props.action_creator2()}>Dispatch Action Creator 2</button>\r\n                {this.props.user_text\r\n                    ? <h3> {this.props.user_text} </h3>\r\n                    : <h3> No User Text </h3>\r\n                }\r\n                <br/>\r\n                {this.props.stateprop1\r\n                    ? <p> stateprop1 is true </p>\r\n                    : <p> stateprop1 is false </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        stateprop1: state.reducer1.stateprop1,\r\n        user_text: state.user_reducer.user_text\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        action1: () => dispatch(ACTIONS.success()),\r\n        action2: () => dispatch(ACTIONS.failure()),\r\n        action_creator1: () => dispatch(ACTIONS.success()),\r\n        action_creator2: () => dispatch(ACTIONS.failure())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container1);","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to='/' style={{padding: '5px'}}>\r\n                    Home\r\n                </Link>\r\n                <Link to='/profile' style={{padding: '5px'}}>\r\n                    Profile\r\n                </Link>\r\n                <Link to='/component1' style={{padding: '5px'}}>\r\n                    Component 1\r\n                </Link>\r\n                <Link to='/container1' style={{padding: '5px'}}>\r\n                    Container 1\r\n                </Link>\r\n                <Link to='/form1' style={{padding: '5px'}}>\r\n                    Form 1\r\n                </Link>\r\n                <Link to='/renderlist' style={{padding: '5px'}}>\r\n                    List\r\n                </Link>\r\n                <Link to='/posts' style={{padding: '5px'}}>\r\n                    Forum\r\n                </Link>\r\n                <Link to='/privateroute' style={{padding: '5px'}}>\r\n                    Private Route\r\n                </Link>\r\n                {!this.props.is_authenticated\r\n                    ? <button onClick={() => this.props.auth.login()}>Login</button>\r\n                    : <button onClick={() => this.props.auth.logout()}>Logout</button>\r\n                }\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        is_authenticated: state.auth_reducer.is_authenticated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import { createBrowserHistory } from 'history';\r\n//let history = createBrowserHistory();\r\nexport default createBrowserHistory()","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport history from '../utils/history';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../App.css';\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            post_id: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const user_id = this.props.db_profile[0].uid;\r\n        axios.get('/api/get/userposts', {params: {user_id: user_id}})\r\n            .then(res => this.props.set_posts(res.data))\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleClickOpen = (pid) => {\r\n        this.setState({open: true, post_id: pid})\r\n    };\r\n\r\n    handleClickClose = ()=> {\r\n        this.setState({open: false, post_id: null})\r\n    };\r\n\r\n    RenderProfile = (props) => (\r\n        <div>\r\n            <h1>{props.profile.profile.nickname}</h1>\r\n            <br />\r\n            <img src={props.profile.profile.picture} alt=\"\" />\r\n            <br />\r\n            <h4> {props.profile.profile.email}</h4>\r\n            <br />\r\n            <h5> {props.profile.profile.name} </h5>\r\n            <br />\r\n            <h6> Email Verified: </h6>\r\n            {props.profile.profile.email_verified ? <p>Yes</p> : <p>No</p> }\r\n            <br />\r\n        </div>\r\n    );\r\n\r\n    RenderPost = post => (\r\n      <Card style={{width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px'}}>\r\n          <CardHeader>\r\n              title={<Link to={{pathname: '/post/' + post.post.pid, state: {post}}}>\r\n                  {post.post.title}\r\n              </Link>}\r\n              subheader={\r\n                  <div className=\"FlexColumn\">\r\n                      <div className=\"FlexRow\">\r\n                          {post.post.date_created}\r\n                      </div>\r\n                      <div className=\"FlexRow\">\r\n                          <Link to={{pathname: '/editpost/' + post.post.pid, state: {post}}}>\r\n                              <button>\r\n                                  Edit\r\n                              </button>\r\n                          </Link>\r\n                          <button onClick={() => this.handleClickOpen(post.post.pid)}>\r\n                                  Delete\r\n                          </button>\r\n                      </div>\r\n                  </div>\r\n              }\r\n              <br />\r\n              <CardContent>\r\n                  <span style={{overflow: 'hidden'}}> {post.post.body} </span>\r\n              </CardContent>\r\n          </CardHeader>\r\n      </Card>\r\n    );\r\n\r\n    DeletePost = () => {\r\n        const post_id = this.state.post_id;\r\n        axios.delete('/api/delete/postcomments', {data: {post_id: post_id}})\r\n            .then(() => axios.delete('api/delete/post', {data: {post_id: post_id}})\r\n                .then(res => console.log(res)))\r\n            .catch((err) => console.log(err))\r\n            .then(() => this.handleClickClose())\r\n            .then(() => setTimeout(() => history.replace('/'), 700))\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <this.RenderProfile profile={this.props.profile} />\r\n                </div>\r\n                <div>\r\n                    {this.props.user_posts\r\n                    ? this.props.user_posts.map(post =>\r\n                        <this.RenderPosts post={post} key={post.pid} />)\r\n                    : null}\r\n                </div>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">Confirm Delete?</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText\r\n                            id=\"alert-dialog-description\"\r\n                        >\r\n                            Deleting Post\r\n                        </DialogContentText>\r\n                        <DialogActions>\r\n                            <Button onClick={() => {\r\n                                this.DeletePost()\r\n                            }}>\r\n                                Agree\r\n                            </Button>\r\n                            <Button onClick={() => this.handleClickClose()}>\r\n                                Cancel\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.auth_reducer.profile,\r\n        user_posts: state.posts_reducer.user_posts,\r\n        db_profile: state.auth_reducer.db_profile\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        set_user_posts: (posts) => dispatch(ACTIONS.fetch_user_posts(posts))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Form1 extends Component {\r\n\r\n    state ={\r\n        value: ''\r\n    };\r\n\r\n    handleChange = (event) => (\r\n        this.setState({value: event.target.value})\r\n    );\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.input_action_creator(event.target.name.value)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label> Input </label>\r\n                    <input id=\"name\" onChange={this.handleChange} type=\"text\" />\r\n                    <button type=\"submit\"> Submit </button>\r\n                </form>\r\n                <br />\r\n                <h3>React State:</h3>\r\n                <p>{this.state.value}</p>\r\n                <br />\r\n                <h3>Redux State:</h3>\r\n                <p>{this.props.user_text}</p>\r\n            </div>\r\n        )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user_text: state.user_reducer.user_text\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        input_action_creator: (text) => dispatch(ACTIONS.user_input(text))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form1);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RenderList extends Component {\r\n    state = {\r\n        items:\r\n            [\r\n                {id: 1, text: \"text 1\", num: 10, bool: true },\r\n                {id: 2, text: \"text 2\", num: 20, bool: false },\r\n                {id: 3, text: \"text 3\", num: 30, bool: true }\r\n            ]\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.items.map(list_item =>\r\n                    <div key={list_item.id}>\r\n                        <Link to={{pathname:'/listitem/' + list_item.id, state:{list_item} }} style={{marginTop: '25px', padding: '5px'}}>\r\n                            List Item {list_item.id}\r\n                        </Link>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RenderList);","import React from 'react'\r\n\r\nconst Component1 = props => (\r\n    <div>\r\n        Component 1\r\n        {console.log(props)}\r\n    </div>\r\n);\r\n\r\nexport default Component1;","import React from 'react'\r\n\r\nconst Callback = props => (\r\n    <div>\r\n        Callback\r\n    </div>\r\n);\r\n\r\nexport default Callback;","import React from 'react'\r\n\r\nconst PrivateComponent = props => (\r\n    <div>\r\n        Private Component\r\n    </div>\r\n);\r\n\r\nexport default PrivateComponent;","import React from 'react'\r\n\r\nconst UnauthRedirect = props => (\r\n    <div>\r\n        UnauthRedirect\r\n    </div>\r\n);\r\n\r\nexport default UnauthRedirect;","import React from 'react'\r\n\r\n//Home page\r\nconst Home = (props) => (\r\n    <div>\r\n        Home\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React from 'react'\r\n\r\n\r\nconst RenderListItem = props => (\r\n    <div>\r\n        <h3>{props.location.state.list_item.text}</h3>\r\n        <h4> {props.location.state.list_item.num} </h4>\r\n        <div>{props.location.state.list_item.bool\r\n            ? <p>Boolean is True</p>\r\n            : <p>Boolean is False</p>\r\n        }\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\nexport default RenderListItem;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SignUp = (props) => (\r\n    <div>\r\n        <h1>\r\n            Signup and Create an Account\r\n        </h1>\r\n        <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.auth.login()}>\r\n            Login\r\n        </Button>\r\n    </div>\r\n);\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Pagination from 'react-js-pagination';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Posts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: [],\r\n            opacity: 0,\r\n            num_posts: 0,\r\n            page_range: 0,\r\n            activePage: 1,\r\n            posts_per_page: 5,\r\n            posts_slice: [],\r\n            posts_search: [],\r\n            posts_search_motion: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleTransition();\r\n        axios.get('/api/get/allposts')\r\n            .then(res => this.props.set_posts(res.data))\r\n            .then(() => this.add_posts_to_state(this.props.posts))\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleTransition = () => {\r\n        setTimeout(() => this.setState({opacity: 1}), 400)\r\n    };\r\n\r\n    add_search_posts_to_state = (posts) => {\r\n        this.setState({posts_search: []});\r\n        this.setState({posts_search: [...posts]});\r\n\r\n        this.animate_search_posts();\r\n    };\r\n\r\n    animate_search_posts = () => {\r\n        this.setState({posts_search_motion: []});\r\n\r\n        let i = 1;\r\n        this.state.posts_search.map(post => {\r\n            setTimeout(() => this.setState({posts_search_motion: [...this.state.posts_search_motion, post]}), 400 * i);\r\n            i++\r\n        })\r\n    };\r\n\r\n    add_posts_to_state = (posts) => {\r\n        this.setState({posts: [...posts]});\r\n        this.setState({num_posts: this.state.posts.length, page_range: this.state.num_posts / 5})\r\n\r\n        this.slice_posts();\r\n        this.animate_posts();\r\n    };\r\n\r\n    slice_posts = () => {\r\n        const indexOfLastPost = this.state.activePage * this.state.posts_per_page;\r\n        const indexOfFirstPost = indexOfLastPost - this.state.posts_per_page;\r\n\r\n        this.setState({posts_slice: this.state.posts.slice(indexOfFirstPost, indexOfLastPost)})\r\n    };\r\n\r\n    animate_posts = () => {\r\n        this.setState({posts_motion: []});\r\n\r\n        let i = 1;\r\n        this.state.posts_slice.map(post => {\r\n            setTimeout(() => this.setState({posts_motion: [...this.state.posts_motion, post]}), 400 * i);\r\n            i++\r\n        })\r\n    };\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.setState({activePage: pageNumber});\r\n\r\n        setTimeout(() => this.slice_posts(), 50);\r\n        setTimeout(() => this.animate_posts(), 100)\r\n    };\r\n\r\n    handleSearch = (event) => {\r\n        const search_query = event.target.value;\r\n\r\n        axios.get('/api/get/searchpost', {params: {search_query: search_query}})\r\n            .then(res => this.props.posts_success(res.data))\r\n            .then(() => this.add_search_posts_to_state(this.props.search_posts))\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    RenderPosts = post => (\r\n        <div>\r\n            <Card style={{width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px'}}>\r\n                <CardHeader>\r\n                    title={<Link to={{pathname: '/post/' + post.post.pid, state: {post}}}>\r\n                    {post.post.title}\r\n                </Link>}\r\n                    subheader={\r\n                    <div className=\"FlexColumn\">\r\n                        <div className=\"FlexRow\">\r\n                            {moment(post.post.date_created).format('MMMM D0, YYYY | h:mm a')}\r\n                            <br />\r\n                            <Link style={{paddingLeft: '5px', textDecoration: 'none'}}\r\n                                  to={{pathname:'/user/' + post.post.author, state: {post}}}>\r\n                                By: {post.post.author}\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"FlexRow\">\r\n                            <i className=\"material-icons\">thumb_up</i>\r\n                            <div className=\"notification-num-posts\">\r\n                                {post.post.likes}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                    <br/>\r\n                    <CardContent>\r\n                        <span style={{overflow: 'hidden'}}> {post.post.body} </span>\r\n                    </CardContent>\r\n                </CardHeader>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{opacity: this.state.opacity, transition: 'opacity 2s ease'}}>\r\n                    <br/>\r\n                    {this.props.is_authenticated\r\n                        ? <Link to=\"/addpost\">\r\n                            <Button color=\"primary\">\r\n                                Add Post\r\n                            </Button>\r\n                        </Link>\r\n                        : <Link to=\"/signup\">\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                SignUp to Add Post\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        id='search'\r\n                        label='Search'\r\n                        margin='normal'\r\n                        onChange={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    {this.state.posts_search\r\n                        ? this.state.posts_search_motion.map(post =>\r\n                            <this.RendePosts key={post.pid} post={post}/>\r\n                        )\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div style={{opacity: this.state.opacity, transition: 'opacity 2s ease'}}>\r\n                    <h2>All Posts</h2>\r\n                    <div>\r\n                        {this.state.posts ?\r\n                            <div>{this.state.posts_motion.map(post =>\r\n                                <this.RenderPosts key={post.pid} post={post}/>\r\n                            )}\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={5}\r\n                        totalItemsCount={this.state.num_posts}\r\n                        pageRangeDisplayed={this.state.page_range}\r\n                        onChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        posts: state.posts_reducer.posts,\r\n        is_authenticated: state.auth_reducer.is_authenticated\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        set_posts: (posts) => dispatch(ACTIONS.fetch_db_posts(posts)),\r\n        posts_success: (posts) => dispatch(ACTIONS.fetch_search_posts(posts)),\r\n        posts_failure: (posts) => dispatch(ACTIONS.remove_search_posts())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Posts);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport history from '../utils/history';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux'\r\n\r\nclass AddPost extends Component {\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const user_id = this.props.db_profile[0].uid;\r\n        const username = this.props.db_profile[0].username; // Should be [1]\r\n        const data = {title: event.target.title.value,\r\n                      body: event.target.body.value,\r\n                      username: username,\r\n                      uid: user_id};\r\n        axios.post('/api/post/posttodb', data)\r\n            .then(response => console.log(response))\r\n            .catch((err) => console.log(err))\r\n            .then(setTimeout(() => history.replace('/'), 700))\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        id='title'\r\n                        label='Title'\r\n                        margin='normal'\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        id='body'\r\n                        label='Body'\r\n                        multiline\r\n                        rows='4'\r\n                        margin='normal'\r\n                    />\r\n                    <br />\r\n                    <button type='submit'>Submit</button>\r\n                </form>\r\n                <br />\r\n                <button onClick={() => history.replace('/posts')}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        db_profile: state.auth_reducer.db_profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddPost);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass ShowPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            comment: '',\r\n            cid: '',\r\n            opacity: 0,\r\n            comments_arr: [],\r\n            comments_motion: [],\r\n            delete_comment_id: 0,\r\n            likes: this.props.location.state.post.post.likes,\r\n            like_user_ids: this.props.location.state.post.post.like_user_ids, //not like_user_id?\r\n            like_post: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/get/allpostcomments', {params: {post_id: this.props.location.state.post.post.pid}})\r\n            .then(res => this.props.set_comments(res.data))\r\n            .then(() => this.add_comments_to_state(this.props.comments))\r\n            .catch((err) => console.log(err));\r\n        this.handleTransition();\r\n    }\r\n\r\n    handleTransition = () => {\r\n        setTimeout(() => this.setState({opacity: 1}), 400)\r\n    };\r\n\r\n    add_comments_to_state = (comments) => {\r\n        this.setState({comments_arr: [...comments]});\r\n        this.animate_comments();\r\n    };\r\n\r\n    animate_comments = () => {\r\n        let i = 1;\r\n        this.state.comments_arr.mao(comment => {\r\n            setTimeout(() => this.setState({comments_motion: [...this.state.comments_motion, comment]}), 400 * i)\r\n        })\r\n    };\r\n\r\n    handleCommentSubmit = (submitted_comment) => {\r\n        setTimeout(() => this.setState({comments_motion: [submitted_comment, ...this.state.comments_motion]}), 50)\r\n    };\r\n\r\n    handleCommentUpdate = (comment) => {\r\n        const commentIndex = this.state.comments_motion.findIndex(com => com.cid === comment.cid);\r\n        let newArr = [...this.state.comments_motion];\r\n        newArr[commentIndex] = comment;\r\n        this.setState({comments_motion: newArr})\r\n    };\r\n\r\n    handleCommentDelete = (cid) => {\r\n        this.setState({delete_comment_id: cid});\r\n        const newArr = this.state.comments_motion.filter(com => com.cid !== cid);\r\n        setTimeout(() => this.setState({comments_motion: newArr}), 2000)\r\n    };\r\n\r\n    RenderComments = (comment) => (\r\n        <div className={this.state.delete_comment_id === comment.comment.cid ? \"FadeOutComment\" : \"CommentStyles\"}>\r\n            <h3>{comment.comment.comment}</h3>\r\n            <small>\r\n                {comment.comment.date_created === 'Just Now ' ?\r\n                    <div>{comment.comment.isEdited ? <span>Edited</span> : <span>Just Now</span>\r\n                    }\r\n                    </div>\r\n                    : comment.comment.date_created}\r\n            </small>\r\n            <p>By: {comment.comment.author}</p>\r\n            {comment.cur_user_id === comment.comment.user_id ?\r\n                <Button onClick={() =>\r\n                    this.handleClickOpen(comment.comment.cid, comment.comment.comment)}>\r\n                    Edit\r\n                </Button> : null\r\n            }\r\n        </div>\r\n    );\r\n\r\n    handleClickOpen = (cid, comment) => {\r\n        this.setState({open: true, comment: comment, cid: cid})\r\n    };\r\n\r\n    handleClose = () => (\r\n        this.setState({open: false, comment: '', cid: ''})\r\n    );\r\n\r\n    handleCommentChange = (event) => (\r\n        this.setState({comment: event.target.value})\r\n    );\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({comment: ''});\r\n        const comment = event.target.comment.value;\r\n        const user_id = this.props.db_profile[0].uid;\r\n        const post_id = this.props.location.state.post.post.post_id;\r\n        const username = this.props.db_profile[0].username;\r\n        const temp_cid = 54365;\r\n        const just_now = \"Just Now\";\r\n        const data = {\r\n            comment: comment,\r\n            post_id: post_id,\r\n            user_id: user_id,\r\n            username: username\r\n        };\r\n        const submitted_comment = {\r\n            cid: temp_cid,\r\n            comment: comment,\r\n            user_id: user_id,\r\n            author: username,\r\n            date_created: just_now\r\n        };\r\n\r\n        axios.post('/api/post/commenttodb', data)\r\n            .then(res => console.log(res))\r\n            .catch((err) => console.log(err));\r\n        window.scroll({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n        this.handleCommentSubmit(submitted_comment);\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        const comment = this.state.comments;\r\n        const cid = this.state.cid;\r\n        const user_id = this.props.db_profile[0].uid;\r\n        const post_id = this.props.location.state.post.post.post_id;\r\n        const username = this.props.db_profile[0].username;\r\n        const just_now = \"Just Now\";\r\n        const data = {\r\n            cid: cid,\r\n            comment: comment,\r\n            post_id: post_id,\r\n            user_id: user_id,\r\n            username: username\r\n        };\r\n        const editted_comment = {\r\n            cid: cid,\r\n            commment: comment,\r\n            post_id: post_id,\r\n            user_id: user_id,\r\n            author: username,\r\n            date_created: just_now,\r\n            isEdited: true\r\n        };\r\n        axios.put('/api/put/commenttodb', data)\r\n            .then(res => console.log(res))\r\n            .catch((err) => console.log(err));\r\n        this.handleCommentChange(editted_comment)\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const cid = this.state.cid;\r\n        axios.delete('/api/delete/deletecomment', {data: {cid: cid}})\r\n            .then(res => console.log(res))\r\n            .catch((err) => console.log(err));\r\n        this.handleCommentDelete(cid)\r\n    };\r\n\r\n    handleLikes = () => {\r\n        const user_id = this.props.db_profile[0].uid;\r\n        const post_id = this.props.location.state.post.post.pid;\r\n\r\n        const data = {\r\n            uid: user_id,\r\n            post_id: post_id\r\n        };\r\n\r\n        axios.put('/api/put/likes', data)\r\n            .then(!this.state.like_user_id.includes(user_id) && this.state.like_post\r\n                ? this.setState({likes: this.state.likes + 1})\r\n                : null)\r\n            .then(this.setState({like_post: false}))\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2>Post</h2>\r\n                    <h4>{this.props.location.state.post.post.title}</h4>\r\n                    <p>{this.props.location.state.post.post.body}</p>\r\n                    <p>{this.props.location.state.post.post.author}</p>\r\n                    <a style={{cursor: 'pointer'}} onClick={this.props.isAuthenticated\r\n                        ? () => this.handleLikes()\r\n                        : () => history.replace('/signup')\r\n                    }>\r\n                        <i className='material-icons'>thumb_up</i>\r\n                        <small className='notification-num-showpost'>t{this.state.likes}</small>\r\n                    </a>\r\n                </div>\r\n                <div style={{opacity: this.state.opacity, transition: 'ease-out 2s'}}>\r\n                    <h2>Comments:</h2>\r\n                    {this.props.comments ?\r\n                        this.state.comments_motion.map(comment =>\r\n                            <this.RenderComments comment={comment}\r\n                                            cur_user_id={this.props.db_profile[0].uid}\r\n                                            key={comment.cid}/>)\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id=\"comment\"\r\n                            label=\"Comment\"\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br/>\r\n                        {this.props.isAuthenticated\r\n                            ? < Button type=\"submit\">Submit</Button>\r\n                            : <Link to='/signup'>\r\n                                <Button color='primary' variant='contained'>\r\n                                    SignUp to Comment\r\n                                </Button>\r\n                            </Link>\r\n                        }\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">Edit Comment</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText\r\n                                id=\"alert-dialog-description\"\r\n                            >\r\n                                <input type=\"text\" value={this.state.comment} onChange={this.handleCommentChange}/>\r\n                            </DialogContentText>\r\n                            <DialogActions>\r\n                                <Button onClick={() => {\r\n                                    this.handleUpdate();\r\n                                    this.setState({open: false});\r\n                                }}>\r\n                                    Agree\r\n                                </Button>\r\n                                <Button onClick={() => this.handleClose()}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={() => this.handleDelete()}>\r\n                                    Delete\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        comments: state.posts_reducer.comments,\r\n        db_profile: state.auth_reducer.db_profile,\r\n        isAuthenticated: state.auth_reducer.is_authenticated\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        set_comments: (comments) => dispatch(ACTIONS.fetch_post_comments(comments))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPost);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport history from '../utils/history';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {connect} from 'react-redux';\r\n//import mapStateToProps from \"react-redux/es/connect/mapStateToProps\";\r\n\r\nclass EditPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            body: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            title: this.props.location.state.post.post.title,\r\n            body: this.props.location.state.post.post.body\r\n        })\r\n    }\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({title: event.target.value})\r\n    };\r\n\r\n    handleBodyChange = (event) => {\r\n        this.setState({body: event.target.value})\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const user_id = this.props.db_profile[0].uid;\r\n        const username = this.props.db_profile[0].username;\r\n        const pid = this.props.location.state.post.post.pid;\r\n        const title = event.target.title.value;\r\n        const body = event.target.body.value;\r\n        const data = {\r\n            title: title,\r\n            body: body,\r\n            pid: pid,\r\n            uid: user_id,\r\n            username: username\r\n        };\r\n\r\n        axios.put('/api/put/post', data)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n            .then(setTimeout(() => history.replace('/profile'), 700))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        id=\"title\"\r\n                        label=\"title\"\r\n                        margin=\"normal\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleTitleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"body\"\r\n                        label=\"body\"\r\n                        multiline\r\n                        rows=\"4\"\r\n                        margin=\"normal\"\r\n                        value={this.state.body}\r\n                        onChange={this.handleBodyChange}\r\n                    />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n                <button onClick={() => history.goBack()}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        db_profile: state.auth_reducer.db_profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditPost);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass ShowUser extends Component {\r\n    componentDidMount() {\r\n        const username = this.props.location.state.post.post.author;\r\n\r\n        axios.get('/api/get/otheruserprofilefromdb', {params: {username: username}})\r\n            .then(res => this.props.set_profile(res.data))\r\n            .catch(err => console.log(err));\r\n        axios.get('/api/get/otheruserpost', {params: {username: username}})\r\n            .then(res => this.props.set_db_posts(res.data))\r\n            .catch(err => console.log(err));\r\n        window.scrollTo({top: 0, left: 0})\r\n    }\r\n\r\n    RenderPosts = post => (\r\n        <div>\r\n            <Card style={{width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px'}}>\r\n                <CardHeader>\r\n                    title={<Link to={{pathname: '/post/' + post.post.pid, state: {post}}}>\r\n                    {post.post.title}\r\n                </Link>}\r\n                    subheader={\r\n                    <div className=\"FlexColumn\">\r\n                        <div className=\"FlexRow\">\r\n                            {moment(post.post.date_created).format('MMMM D0, YYYY | h:mm a')}\r\n                            <br/>\r\n                            By: {post.post.author}\r\n                        </div>\r\n                        <div className=\"FlexRow\">\r\n                            <i className=\"material-icons\">thumb_up</i>\r\n                            <div className=\"notification-num-posts\">\r\n                                {post.post.likes}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                    <br/>\r\n                    <CardContent>\r\n                        <span style={{overflow: 'hidden'}}> {post.post.body} </span>\r\n                    </CardContent>\r\n                </CardHeader>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n    RenderProfile = () => (\r\n        <div>\r\n            <div className=\"FlexRow\">\r\n                <h1>{this.props.profile.username}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='FlexRow'>\r\n                    {this.props.user_profile\r\n                        ? <this.RenderProfile profile={this.props.user_profile[0]}/>\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <h3>Latest Activity:</h3>\r\n                    <div>\r\n                        {this.props.user_posts\r\n                            ? this.props.user_posts.map(post =>\r\n                                <div>\r\n                                    <this.RenderPosts key={post.pid} post={post}/>\r\n                                    <br/>\r\n                                </div>\r\n                            )\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user_profile: state.user_reducer.OtherUserDBProfile,\r\n        user_posts: state.user_reducer.db_other_user_posts\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        set_db_posts: (posts) => dispatch(ACTIONS.get_other_user_db_posts(posts)),\r\n        set_profile: (profile) => dispatch(ACTIONS.set_other_user_db_profile(profile))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUser);","import React, {Component} from 'react';\r\nimport history from './history';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass AuthCheck extends Component {\r\n\r\n    send_profile_to_db = (profile) => {\r\n        const data = profile;\r\n        axios.post('/api/posts/userprofiletodb', data)\r\n            .then(() => axios.get('api/get/userprofilefromdb'), {params: {email: profile.profile.email}}\r\n                .then(res => this.props.set_db_profile(res.data)))\r\n            .then(history.replace('/'))\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated()) {\r\n            this.props.login_success();\r\n            this.props.add_profile(this.props.auth.userProfile);\r\n            this.send_profile_to_db(this.props.auth.userProfile);\r\n            history.replace('/')\r\n        } else {\r\n            this.props.login_failure();\r\n            this.props.remove_profile();\r\n            this.props.remove_db_profile();\r\n            history.replace('/')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login_success: () => dispatch(ACTIONS.login_success()),\r\n        login_failure: () => dispatch(ACTIONS.login_failure()),\r\n        add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n        remove_profile: () => dispatch(ACTIONS.remove_profile()),\r\n        set_db_profile: (profile) => dispatch(ACTIONS.set_db_profile(profile)),\r\n        remove_db_profile: () => dispatch(ACTIONS.remove_db_profile())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthCheck);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Container1 from './containers/container1'\r\nimport Header from './containers/header';\r\nimport Profile from './containers/profile';\r\nimport Form1 from './containers/form1';\r\nimport RenderList from './containers/renderlist';\r\n\r\n\r\nimport Component1 from './functional/component1';\r\nimport Callback from './functional/callback';\r\nimport PrivateComponent from './functional/privatecomponent';\r\nimport UnauthRedirect from './functional/unauthredirect';\r\nimport Home from './functional/home';\r\nimport RenderListItem from './functional/renderlistitem';\r\nimport SignUp from './functional/signup';\r\n\r\nimport Posts from './blog/posts';\r\nimport AddPost from './blog/addpost';\r\nimport ShowPost from './blog/showpost';\r\nimport EditPost from './blog/editpost';\r\nimport ShowUser from './profile/showuser';\r\n\r\nimport * as ACTIONS from './store/actions/actions';\r\n\r\nimport Auth from './utils/auth';\r\nimport AuthCheck from './utils/authCheck';\r\nimport history from './utils/history';\r\n\r\nimport {Router, Route, Switch, Redirect} from 'react-router';\r\n\r\nexport const auth = new Auth();\r\n\r\nconst handleAuthentication = (props) => {\r\n    if (props.location.hash) {\r\n        auth.handleAuth()\r\n    }\r\n};\r\n\r\nconst PrivateRoute = ({component: Component, auth}) => (\r\n    <Route render={props => auth.isAuthenticated() === true\r\n        ? <Component auth={auth} {...props} />\r\n        : <Redirect to={{pathname: '/signup'}}/>\r\n    }\r\n    />\r\n);\r\n\r\nclass Routes extends Component {\r\n    componentDidMount() {\r\n        if (auth.isAuthenticated()) {\r\n            this.props.login_success();\r\n            auth.getProfile();\r\n            setTimeout(() => {\r\n                this.props.add_profile(auth.userProfile)\r\n            }, 400)\r\n        } else {\r\n            this.props.login_failure();\r\n            this.props.remove_profile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router history={history}>\r\n                    <div>\r\n                        <Header auth={auth}/>\r\n                        <Switch>\r\n                            <Route exact path='/' component={Home}/>\r\n                            <Route exact path='/form1' component={Form1}/>\r\n                            <Route exact path='/container1' render={() => <Container1 auth={auth}/>}/>\r\n                            <Route path='/authcheck' render={() => <AuthCheck auth={auth}/>}/>\r\n                            <Route path='/redirect' component={UnauthRedirect}/>\r\n                            <Route path='/renderlist' component={RenderList}/>\r\n                            <Route path='/signup' render={() => <SignUp auth={auth}/>}/>\r\n\r\n                            <Route path='/user/:uid' component={ShowUser} />\r\n\r\n                            <Route path='/posts' component={Posts} />\r\n                            <Route path='/post/:pid' component={ShowPost} />\r\n                            <Route path='/editpost/:pid' component={EditPost} />\r\n                            <Route path='/addpost' component={AddPost} />\r\n\r\n\r\n                            <Route path='/callback' render={(props) => {\r\n                                handleAuthentication(props);\r\n                                return <Callback/>\r\n                            }}/>\r\n                            <Route path=\"/component1\" render={(props) => <Component1 {...props} />}/>\r\n\r\n                            <Route path=\"/listitem/:id\" component={RenderListItem}/>\r\n\r\n                            <PrivateRoute path=\"/privateroute\" auth={auth} component={PrivateComponent}/>\r\n                            <PrivateRoute path=\"/profile\" auth={auth} component={Profile}/>\r\n\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login_success: () => dispatch(ACTIONS.login_success()),\r\n        login_failure: () => dispatch(ACTIONS.login_failure()),\r\n        add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n        remove_profile: () => dispatch(ACTIONS.remove_profile())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);","import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n    auth0 = new auth0.WebAuth({\r\n        domain: 'dev-6787lr2s.us.auth0.com',\r\n        clientID: 'wEoFJC3I1oEHeRnU6nK0lWLk19Dp2njS',\r\n        redirectUri: 'http://18.216.22.48/callback',\r\n        responseType: 'token id_token',\r\n        scope: 'openid profile email'\r\n    });\r\n\r\n    userProfile = {};\r\n\r\n    login = () => {\r\n        this.auth0.authorize()\r\n    };\r\n\r\n    handleAuth = () => {\r\n        this.auth0.parseHash((err, authResult) => {\r\n            if (authResult) {\r\n                localStorage.setItem('access_token', authResult.accessToken);\r\n                localStorage.setItem('id_token', authResult.idToken);\r\n\r\n                let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()));\r\n                localStorage.setItem('expiresAt', expiresAt);\r\n\r\n                this.getProfile();\r\n                setTimeout(() => {\r\n                    history.replace('/authcheck')\r\n                }, 2000);\r\n            } else {\r\n                console.log(err)\r\n            }\r\n        })\r\n    };\r\n\r\n    getAccessToken = () => {\r\n        if (localStorage.getItem('access_token')) {\r\n            const accessToken = localStorage.getItem('access_token');\r\n            return accessToken\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n\r\n\r\n    getProfile = () => {\r\n        let accessToken = this.getAccessToken();\r\n        if (accessToken) {\r\n            this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n                if (profile) {\r\n                    this.userProfile = {profile}\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('expiresAt');\r\n        setTimeout(() => {\r\n            history.replace('/authcheck')\r\n        }, 200);\r\n    };\r\n\r\n    isAuthenticated = () => {\r\n        let expiresAt = JSON.parse(localStorage.getItem('expiresAt'));\r\n        return new Date().getTime() < expiresAt\r\n    }\r\n\r\n}","import React, { Component } from 'react';\nimport Routes from './routes';\n\n\n//main app\nclass App extends Component {\n\n    render() {\n        return(\n            <div>\n                React\n                <Routes />\n            </div>\n        )}\n}\n\n\nexport default App;","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n    stateprop1: false,\r\n}\r\n\r\nconst Reducer1 = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SUCCESS:\r\n            return {\r\n                ...state,\r\n                stateprop1: true\r\n            }\r\n        case ACTION_TYPES.FAILURE:\r\n            return {\r\n                ...state,\r\n                stateprop1: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default Reducer1;","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n    is_authenticated: false,\r\n    profile: null,\r\n    db_profile: null,\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_authenticated: true\r\n            };\r\n        case ACTION_TYPES.LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                is_authenticated: false\r\n            };\r\n        case ACTION_TYPES.ADD_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null\r\n            };\r\n        case ACTION_TYPES.SET_DB_PROFILE:\r\n            return {\r\n                ...state,\r\n                db_profile: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_DB_PROFILE:\r\n            return {\r\n                ...state,\r\n                db_profile: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default AuthReducer;","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    comments: [],\r\n    user_posts: [],\r\n    search_posts: []\r\n};\r\n\r\nconst PostsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_DB_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_DB_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: []\r\n            };\r\n        case ACTION_TYPES.FETCH_POST_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comments: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_POST_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comments: []\r\n            };\r\n        case ACTION_TYPES.FETCH_USER_POSTS:\r\n            return {\r\n                ...state,\r\n                user_posts: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_USER_POSTS:\r\n            return {\r\n                ...state,\r\n                user_posts: []\r\n            };\r\n        case ACTION_TYPES.SEARCH_POSTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                search_posts: action.payload\r\n            };\r\n        case ACTION_TYPES.SEARCH_POSTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                search_posts: []\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default PostsReducer;","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n    user_text: '',\r\n    OtherUserDBProfile: null,\r\n    db_other_user_posts: []\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.USER_INPUT:\r\n            return {\r\n                ...state,\r\n                user_text: action.payload\r\n            };\r\n        case ACTION_TYPES.SET_OTHER_USER_DB_PROFILE:\r\n            return {\r\n                ...state,\r\n                OtherUserDBProfile: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE:\r\n            return {\r\n                ...state,\r\n                OtherUserDBProfile: null\r\n            };\r\n        case ACTION_TYPES.SET_OTHER_USER_DB_POSTS:\r\n            return {\r\n                ...state,\r\n                db_other_user_posts: action.payload\r\n            };\r\n        case ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS:\r\n            return {\r\n                ...state,\r\n                db_other_user_posts: []\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default UserReducer;","import Reducer1 from './reducer1'\r\nimport AuthReducer from './auth_reducer';\r\nimport PostsReducer from './posts_reducer';\r\nimport UserReducer from './user_reducer';\r\nimport {combineReducers} from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    reducer1: Reducer1,\r\n    auth_reducer: AuthReducer,\r\n    posts_reducer: PostsReducer,\r\n    user_reducer: UserReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware()\n));\n\n\nReactDOM.render(<Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}